apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "users-chart.fullname" . }}
  labels:
    {{- include "users-chart.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "users-chart.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "users-chart.selectorLabels" . | nindent 8 }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/config.yaml") . | sha256sum }}
    spec:
      initContainers:
        - name: check-db-ready
          image: postgres:latest
          env:
            - name: POSTGRES_HOST
              value: {{ include "postgresql.fullname" . | quote }}
            - name: POSTGRES_PORT
              value: {{ .Values.postgresql.service.port | quote }}
          command:
            - sh
            - "-c"
            - |
              until pg_isready -h $POSTGRES_HOST -p $POSTGRES_PORT;
              do echo waiting for database; sleep 2; done;
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository}}:{{ .Chart.AppVersion }}"
          envFrom:
            - secretRef:
                name: users-secret
          ports:
             - name: http
               containerPort: 80
               protocol: TCP
          readinessProbe:
            httpGet:
              port: 80
              path: /health
            initialDelaySeconds: 5
            periodSeconds: 5
